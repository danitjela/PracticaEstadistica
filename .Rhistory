library(gt)
library(flextable)
library(knitr)
library(corrplot)
library(dplyr)
library(kableExtra)
lab <- read.csv("DATA/Steam_2024_bestRevenue_1500.csv", header = TRUE, sep = ",")
lab |>
mutate(releaseDate = as.Date(releaseDate))
lab |>
slice_head(n=10) |>
gt()
lab <- lab |>
mutate(releaseDate = as.Date(releaseDate, format = "%d-%m-%Y"))
lab <- lab |>
mutate(mes = format(releaseDate, "%m"),
mes = factor(mes, levels = sprintf("%02d", 1:12), labels = month.abb))
lanzamientos_mes <- lab |>
group_by(mes) |>
summarise(n_juegos = n(), .groups = 'drop')
ggplot(lanzamientos_mes, aes(x = mes, y = n_juegos, fill = n_juegos)) +
geom_bar(stat = "identity", color = "white", alpha = 0.8) +
scale_fill_gradient2(low = "steelblue", mid = "skyblue", high = "red", midpoint = median(lanzamientos_mes$n_juegos)) +
theme_bw() +
labs(title = "Distribución de las fechas de lanzamiento del 2024",
x = "Mes",
y = "Nº Lanzamientos")
copiesSold_breaks <- c(500, 5000, 10000, 15000, 25000, 50000, 100000, 1000000, 5000000, 10000000, 31000000)
copiesSold_labels <- c("[500-5k]", "(5k-10k]", "(10k-15k]", "(15k-25k]", "(25k-50k]", "(50k-100k]", "(100k-1M]", "(1M-5M]", "(5M-10M]", "(10M-31M]")
lab$copiesSold_intervalos <- cut(lab$copiesSold, breaks = copiesSold_breaks, labels = copiesSold_labels, include.lowest = TRUE)
table(lab$copiesSold_intervalos) |>
as.data.frame() |>
mutate(freqRelativa = Freq / sum(Freq), freqAbsAcumulada = cumsum(Freq), freqRelAcumulada = cumsum(freqRelativa)) |>
gt() |>
tab_header(
title = md("**_Nº de copias vendidas_**")
) |>
cols_label(Var1 = "\\(x_i\\)", Freq = "\\(n_i\\)", freqRelativa = "\\(f_i\\)",
freqAbsAcumulada = "\\(N_i\\)", freqRelAcumulada = "\\(F_i\\)") |>
fmt_number(3, decimals = 4) |>
tab_style(style = list (cell_text(weight = "bold")), locations = cells_column_labels()) |>
tab_style(style = list(cell_text(weight = "bold")),  locations = cells_body(rows = c(1, 2)))
ggplot(data.frame(x = lab$copiesSold), aes(x = x)) +
geom_histogram(binwidth = 200000, fill = "steelblue", color = "white",
aes(y = ..count..)) +
theme_bw() +
labs(title = "Distribución del Nº de copias vendidas:",
x = "Precio ($)",
y = expression("Frecuencia absoluta ("*n[i]*")")) +
scale_x_continuous(limits = c(500, 6000000),
breaks = seq(1000000, 6000000, by = 1000000),
labels = c("1M", "2M", "3M", "4M", "5M", "6M")) +
scale_y_continuous(limits = c(0, 130),
breaks = seq(0, 130, by = 20),
labels = seq(0, 130, by = 20))
ggplot(lab, aes(x = copiesSold)) +
geom_histogram(binwidth = 200000, fill = "steelblue", color = "white",
aes(y = ..count../sum(..count..))) +
stat_function(fun = dnorm, args = list(mean = mean(lab$copiesSold),
sd = sd(lab$copiesSold)), color = "red", size = 1.5, alpha = 0.6) +
theme_bw() +
labs(title = "Distribución del Nº de copias vendidas:",
x = "Precio ($)",
y = expression("Frecuencia relativa ("*f[i]*")")) +
scale_x_continuous(limits = c(0, 6000000),
breaks = seq(1000000, 6000000, by = 1000000),
labels = c("1M", "2M", "3M", "4M", "5M", "6M")) +
scale_y_continuous(limits = c(0, 0.025),
breaks = seq(0, 0.025, by = 0.01),
labels = seq(0, 0.025, by = 0.01))
lab|> select(copiesSold) |> descr() |> kable(digits = 2)
price_breaks <- seq(min(lab$price), max(lab$price), length.out = 11)
lab$price_intervalos <- cut(lab$price, breaks = price_breaks, include.lowest = TRUE)
table(lab$price_intervalos) |>
as.data.frame() |>
mutate(freqRelativa = Freq / sum(Freq), freqAbsAcumulada = cumsum(Freq), freqRelAcumulada = cumsum(freqRelativa)) |>
gt() |>
tab_header(
title = md("**_Precio por copia ($)_**")
) |>
cols_label(Var1 = "\\(x_i\\)", Freq = "\\(n_i\\)", freqRelativa = "\\(f_i\\)",
freqAbsAcumulada = "\\(N_i\\)", freqRelAcumulada = "\\(F_i\\)") |>
fmt_number(3, decimals = 4) |>
tab_style(style = list (cell_text(weight = "bold")), locations = cells_column_labels())
lab_filtrado <- lab[lab$price != 99.99,]
price_filtrado <- lab_filtrado$price
ggplot(data.frame(x = price_filtrado), aes(x = x)) +
geom_histogram(binwidth = 3, fill = "steelblue", color = "white",
aes(y = ..count..)) +
theme_bw() +
labs(title = "Distribución del precio por copia:",
x = "Precio ($)",
y = expression("Frecuencia absoluta ("*n[i]*")"))
ggplot(data.frame(x = price_filtrado), aes(x = x)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white",
aes(y = ..count../sum(..count..))) +
stat_function(fun = dnorm, args = list(mean = mean(price_filtrado),
sd = sd(price_filtrado)), color = "red", size = 1.5, alpha = 0.6) +
theme_bw() +
labs(title = "Distribución del precio por copia:",
x = "Precio ($)",
y = expression("Frecuencia relativa ("*f[i]*")"))
analisis_price <- lab|> select(price) |> descr() |> kable(digits = 2)
analisis_price_filtrado <- price_filtrado |> descr() |> kable(digits = 2)
cbind(analisis_price, analisis_price_filtrado) |>
kable(digits = 2)
ggplot(lab, aes(x = revenue)) +
geom_histogram(binwidth = 2000000, fill = "steelblue", color = "white") +
labs(title = "Distribución de los Beneficios de los Videojuegos",
x = "Beneficios ($)",
y = "Frecuencia") +
ylim(0, 200) +  # Establece el rango del eje Y de 0 a 500
xlim(0, 50000000) +  # Limita el rango del eje X a 50 millones
theme_minimal()
lab |> ggplot(aes(avgPlaytime)) +
geom_histogram(
fill = "steelblue",
col = "white",
breaks = seq(0,100, by = 10)
) +
theme_bw() +
labs(x = "Tiempo promedio de juego (horas)", y = "Frecuencia", title = "Distribución de tiempo de juego por   intervalos")
top_ten_games <- lab %>%
arrange(desc(avgPlaytime)) %>%
slice(1:10) %>%
select(name, avgPlaytime) %>%
mutate(avgPlaytime = round(avgPlaytime, 2))
top_ten_games |>
kable(caption = "Los 10 juegos con más horas de juego") |>
kable_styling(full_width = F)
num_respuestas_SCORE <- length(unique(lab$reviewScore))
cat("La cantidad de respuestas obtenidas es:", num_respuestas_SCORE)
max_val <- max(lab$reviewScore)
max_val <- min(max_val, 100)
lab$reviewScore_rango <- cut(lab$reviewScore,
breaks = c(0, 1, seq(5, max_val, by = 5)),
right = FALSE,
include.lowest = TRUE,
labels = c("0", paste(seq(1, max_val-4, by = 5), seq(5, max_val, by = 5)-1, sep = "-")))
tabla_frecuencias_score <- lab |>
count(reviewScore_rango) |>
mutate(f = n / nrow(lab), N = cumsum(n), F = cumsum(f))
tabla_frecuencias_ordenada4 <- tabla_frecuencias_score |>
arrange(desc(n))
tabla_frecuencias_ordenada4$F <- cumsum(tabla_frecuencias_ordenada4$f)
tabla_frecuencias_ordenada4$N <- cumsum(tabla_frecuencias_ordenada4$n)
print(tabla_frecuencias_ordenada4)
labNo0 <- subset(lab, reviewScore != 0)
datos <- labNo0$reviewScore
ggplot(data.frame(x = datos), aes(x = x)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white",
aes(y = ..density..), alpha = 0.6) +
stat_function(fun = dnorm, args = list(mean = mean(datos),
sd = sd(datos)), color = "red", size = 1.5) +
labs(title = "Distribución de las puntuaciones",
x = "Puntuación",
y = "Frecuencia")
labNo0 |> select(reviewScore) |> descr() |> kable(digits = 2)
tabla_frecuencias_publisherclass <- lab |>
count(publisherClass) |>
mutate(f = n / nrow(lab))
print(tabla_frecuencias_publisherclass)
lab  |> group_by(publisherClass) |>  summarise(Frequency = n()) |> mutate(Frequency = Frequency/sum(Frequency), publisherClass = reorder(publisherClass, -Frequency)) |> ggplot(aes(x = publisherClass, y = Frequency)) + geom_bar(stat = "identity", aes(fill = Frequency)) + scale_y_continuous(labels = scales::percent) + theme_bw() + labs(title = "Gráfico de barras con frecuencia relativa de PUBLISHERCLASS", x = "Tipo de empresa", y = "Frecuencia relativa") + scale_fill_gradient("Frecuencia", low = "steelblue", high = "#CB0017") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
top_publishers <- lab %>%
count(publishers) %>%
top_n(10, n)
ggplot(top_publishers, aes(x = reorder(publishers, n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue", color = "white") +
labs(title = "Top 10 Publishers por Número de Videojuegos",
x = "Publisher",
y = "Número de Videojuegos") +
theme_minimal() +
coord_flip()
table(lab$developers) |>
as.data.frame() |>
arrange(desc(Freq)) |>
slice(1:10) |>
mutate(F = cumsum(Freq)/sum(Freq)) |>
gt() |>
tab_header(
title = md("**_Los 10 desarrolladores más frecuentes_**")
) |>
cols_label(Var1 = "Desarrollador",
Freq = "Frecuencia",
F = "Frecuencia relativa acumulada") |>
fmt_number(3, decimals = 4) |>
tab_style(style = list(
cell_text(weight = "bold")),
locations = cells_column_labels())
labNo0 |> select(copiesSold, revenue, price, reviewScore, avgPlaytime) |>
cor() |>
corrplot(method = "ellipse",  # Usa elipses para representar correlaciones
type = "lower",  # Muestra solo la mitad inferior de la matriz
addCoef.col = "steelblue",  # Color de los coeficientes de correlación
diag = FALSE)  # Omite la diagonal principal
sum(is.na(lab$copiesSold))
sum(is.na(lab$revenue))
summary(lab$copiesSold)
summary(lab$revenue)
ggplot(lab, aes(x = copiesSold, y = revenue)) +
geom_jitter(color = "blue", size = 1, width = 0.2, height = 0, alpha = 0.7) +
scale_y_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
scale_x_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
labs(title = "Relación entre Copias Vendidas y Recaudación",
x = "Copias Vendidas",
y = "Recaudación (en logaritmos)") +
theme_minimal()
correlacion <- cor(lab$copiesSold, lab$revenue, use = "complete.obs")
correlacion_df <- data.frame(Variable1 = "copiesSold",
Variable2 = "revenue",
Correlacion = round(correlacion, 2))
correlacion_df %>%
kable(caption = "Correlación entre las copias vendidas y la recaudación") %>%
kable_styling(full_width = F)
lab_filt <- lab %>%
filter(copiesSold <= umbral_copiesSold & revenue <= umbral_revenue)
modelo <- lm(revenue ~ copiesSold, data = lab_filt)
summary(modelo)
ggplot(lab_filt, aes(x = copiesSold, y = revenue)) +
geom_point(size = 2, alpha = 0.7) +
geom_smooth(method = "lm", color = "blue") +
scale_x_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
scale_y_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
labs(title = "Regresión Lineal: Copias Vendidas vs Recaudación",
x = "Copias Vendidas",
y = "Recaudación (en miles de dólares)") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE,
error = TRUE)
library(tidyverse)
library(summarytools)
library(GGally)
library(gt)
library(flextable)
library(knitr)
library(corrplot)
library(dplyr)
library(kableExtra)
lab <- read.csv("DATA/Steam_2024_bestRevenue_1500.csv", header = TRUE, sep = ",")
lab |>
mutate(releaseDate = as.Date(releaseDate))
lab |>
slice_head(n=10) |>
gt()
lab <- lab |>
mutate(releaseDate = as.Date(releaseDate, format = "%d-%m-%Y"))
lab <- lab |>
mutate(mes = format(releaseDate, "%m"),
mes = factor(mes, levels = sprintf("%02d", 1:12), labels = month.abb))
lanzamientos_mes <- lab |>
group_by(mes) |>
summarise(n_juegos = n(), .groups = 'drop')
ggplot(lanzamientos_mes, aes(x = mes, y = n_juegos, fill = n_juegos)) +
geom_bar(stat = "identity", color = "white", alpha = 0.8) +
scale_fill_gradient2(low = "steelblue", mid = "skyblue", high = "red", midpoint = median(lanzamientos_mes$n_juegos)) +
theme_bw() +
labs(title = "Distribución de las fechas de lanzamiento del 2024",
x = "Mes",
y = "Nº Lanzamientos")
copiesSold_breaks <- c(500, 5000, 10000, 15000, 25000, 50000, 100000, 1000000, 5000000, 10000000, 31000000)
copiesSold_labels <- c("[500-5k]", "(5k-10k]", "(10k-15k]", "(15k-25k]", "(25k-50k]", "(50k-100k]", "(100k-1M]", "(1M-5M]", "(5M-10M]", "(10M-31M]")
lab$copiesSold_intervalos <- cut(lab$copiesSold, breaks = copiesSold_breaks, labels = copiesSold_labels, include.lowest = TRUE)
table(lab$copiesSold_intervalos) |>
as.data.frame() |>
mutate(freqRelativa = Freq / sum(Freq), freqAbsAcumulada = cumsum(Freq), freqRelAcumulada = cumsum(freqRelativa)) |>
gt() |>
tab_header(
title = md("**_Nº de copias vendidas_**")
) |>
cols_label(Var1 = "\\(x_i\\)", Freq = "\\(n_i\\)", freqRelativa = "\\(f_i\\)",
freqAbsAcumulada = "\\(N_i\\)", freqRelAcumulada = "\\(F_i\\)") |>
fmt_number(3, decimals = 4) |>
tab_style(style = list (cell_text(weight = "bold")), locations = cells_column_labels()) |>
tab_style(style = list(cell_text(weight = "bold")),  locations = cells_body(rows = c(1, 2)))
ggplot(data.frame(x = lab$copiesSold), aes(x = x)) +
geom_histogram(binwidth = 200000, fill = "steelblue", color = "white",
aes(y = ..count..)) +
theme_bw() +
labs(title = "Distribución del Nº de copias vendidas:",
x = "Precio ($)",
y = expression("Frecuencia absoluta ("*n[i]*")")) +
scale_x_continuous(limits = c(500, 6000000),
breaks = seq(1000000, 6000000, by = 1000000),
labels = c("1M", "2M", "3M", "4M", "5M", "6M")) +
scale_y_continuous(limits = c(0, 130),
breaks = seq(0, 130, by = 20),
labels = seq(0, 130, by = 20))
ggplot(lab, aes(x = copiesSold)) +
geom_histogram(binwidth = 200000, fill = "steelblue", color = "white",
aes(y = ..count../sum(..count..))) +
stat_function(fun = dnorm, args = list(mean = mean(lab$copiesSold),
sd = sd(lab$copiesSold)), color = "red", size = 1.5, alpha = 0.6) +
theme_bw() +
labs(title = "Distribución del Nº de copias vendidas:",
x = "Precio ($)",
y = expression("Frecuencia relativa ("*f[i]*")")) +
scale_x_continuous(limits = c(0, 6000000),
breaks = seq(1000000, 6000000, by = 1000000),
labels = c("1M", "2M", "3M", "4M", "5M", "6M")) +
scale_y_continuous(limits = c(0, 0.025),
breaks = seq(0, 0.025, by = 0.01),
labels = seq(0, 0.025, by = 0.01))
lab|> select(copiesSold) |> descr() |> kable(digits = 2)
price_breaks <- seq(min(lab$price), max(lab$price), length.out = 11)
lab$price_intervalos <- cut(lab$price, breaks = price_breaks, include.lowest = TRUE)
table(lab$price_intervalos) |>
as.data.frame() |>
mutate(freqRelativa = Freq / sum(Freq), freqAbsAcumulada = cumsum(Freq), freqRelAcumulada = cumsum(freqRelativa)) |>
gt() |>
tab_header(
title = md("**_Precio por copia ($)_**")
) |>
cols_label(Var1 = "\\(x_i\\)", Freq = "\\(n_i\\)", freqRelativa = "\\(f_i\\)",
freqAbsAcumulada = "\\(N_i\\)", freqRelAcumulada = "\\(F_i\\)") |>
fmt_number(3, decimals = 4) |>
tab_style(style = list (cell_text(weight = "bold")), locations = cells_column_labels())
lab_filtrado <- lab[lab$price != 99.99,]
price_filtrado <- lab_filtrado$price
ggplot(data.frame(x = price_filtrado), aes(x = x)) +
geom_histogram(binwidth = 3, fill = "steelblue", color = "white",
aes(y = ..count..)) +
theme_bw() +
labs(title = "Distribución del precio por copia:",
x = "Precio ($)",
y = expression("Frecuencia absoluta ("*n[i]*")"))
ggplot(data.frame(x = price_filtrado), aes(x = x)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white",
aes(y = ..count../sum(..count..))) +
stat_function(fun = dnorm, args = list(mean = mean(price_filtrado),
sd = sd(price_filtrado)), color = "red", size = 1.5, alpha = 0.6) +
theme_bw() +
labs(title = "Distribución del precio por copia:",
x = "Precio ($)",
y = expression("Frecuencia relativa ("*f[i]*")"))
analisis_price <- lab|> select(price) |> descr() |> kable(digits = 2)
analisis_price_filtrado <- price_filtrado |> descr() |> kable(digits = 2)
cbind(analisis_price, analisis_price_filtrado) |>
kable(digits = 2)
ggplot(lab, aes(x = revenue)) +
geom_histogram(binwidth = 2000000, fill = "steelblue", color = "white") +
labs(title = "Distribución de los Beneficios de los Videojuegos",
x = "Beneficios ($)",
y = "Frecuencia") +
ylim(0, 200) +  # Establece el rango del eje Y de 0 a 500
xlim(0, 50000000) +  # Limita el rango del eje X a 50 millones
theme_minimal()
lab |> ggplot(aes(avgPlaytime)) +
geom_histogram(
fill = "steelblue",
col = "white",
breaks = seq(0,100, by = 10)
) +
theme_bw() +
labs(x = "Tiempo promedio de juego (horas)", y = "Frecuencia", title = "Distribución de tiempo de juego por   intervalos")
top_ten_games <- lab %>%
arrange(desc(avgPlaytime)) %>%
slice(1:10) %>%
select(name, avgPlaytime) %>%
mutate(avgPlaytime = round(avgPlaytime, 2))
top_ten_games |>
kable(caption = "Los 10 juegos con más horas de juego") |>
kable_styling(full_width = F)
num_respuestas_SCORE <- length(unique(lab$reviewScore))
cat("La cantidad de respuestas obtenidas es:", num_respuestas_SCORE)
max_val <- max(lab$reviewScore)
max_val <- min(max_val, 100)
lab$reviewScore_rango <- cut(lab$reviewScore,
breaks = c(0, 1, seq(5, max_val, by = 5)),
right = FALSE,
include.lowest = TRUE,
labels = c("0", paste(seq(1, max_val-4, by = 5), seq(5, max_val, by = 5)-1, sep = "-")))
tabla_frecuencias_score <- lab |>
count(reviewScore_rango) |>
mutate(f = n / nrow(lab), N = cumsum(n), F = cumsum(f))
tabla_frecuencias_ordenada4 <- tabla_frecuencias_score |>
arrange(desc(n))
tabla_frecuencias_ordenada4$F <- cumsum(tabla_frecuencias_ordenada4$f)
tabla_frecuencias_ordenada4$N <- cumsum(tabla_frecuencias_ordenada4$n)
print(tabla_frecuencias_ordenada4)
labNo0 <- subset(lab, reviewScore != 0)
datos <- labNo0$reviewScore
ggplot(data.frame(x = datos), aes(x = x)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "white",
aes(y = ..density..), alpha = 0.6) +
stat_function(fun = dnorm, args = list(mean = mean(datos),
sd = sd(datos)), color = "red", size = 1.5) +
labs(title = "Distribución de las puntuaciones",
x = "Puntuación",
y = "Frecuencia")
labNo0 |> select(reviewScore) |> descr() |> kable(digits = 2)
tabla_frecuencias_publisherclass <- lab |>
count(publisherClass) |>
mutate(f = n / nrow(lab))
print(tabla_frecuencias_publisherclass)
lab  |> group_by(publisherClass) |>  summarise(Frequency = n()) |> mutate(Frequency = Frequency/sum(Frequency), publisherClass = reorder(publisherClass, -Frequency)) |> ggplot(aes(x = publisherClass, y = Frequency)) + geom_bar(stat = "identity", aes(fill = Frequency)) + scale_y_continuous(labels = scales::percent) + theme_bw() + labs(title = "Gráfico de barras con frecuencia relativa de PUBLISHERCLASS", x = "Tipo de empresa", y = "Frecuencia relativa") + scale_fill_gradient("Frecuencia", low = "steelblue", high = "#CB0017") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
top_publishers <- lab %>%
count(publishers) %>%
top_n(10, n)
ggplot(top_publishers, aes(x = reorder(publishers, n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue", color = "white") +
labs(title = "Top 10 Publishers por Número de Videojuegos",
x = "Publisher",
y = "Número de Videojuegos") +
theme_minimal() +
coord_flip()
table(lab$developers) |>
as.data.frame() |>
arrange(desc(Freq)) |>
slice(1:10) |>
mutate(F = cumsum(Freq)/sum(Freq)) |>
gt() |>
tab_header(
title = md("**_Los 10 desarrolladores más frecuentes_**")
) |>
cols_label(Var1 = "Desarrollador",
Freq = "Frecuencia",
F = "Frecuencia relativa acumulada") |>
fmt_number(3, decimals = 4) |>
tab_style(style = list(
cell_text(weight = "bold")),
locations = cells_column_labels())
labNo0 |> select(copiesSold, revenue, price, reviewScore, avgPlaytime) |>
cor() |>
corrplot(method = "ellipse",  # Usa elipses para representar correlaciones
type = "lower",  # Muestra solo la mitad inferior de la matriz
addCoef.col = "steelblue",  # Color de los coeficientes de correlación
diag = FALSE)  # Omite la diagonal principal
sum(is.na(lab$copiesSold))
sum(is.na(lab$revenue))
summary(lab$copiesSold)
summary(lab$revenue)
ggplot(lab, aes(x = copiesSold, y = revenue)) +
geom_jitter(color = "blue", size = 1, width = 0.2, height = 0, alpha = 0.7) +
scale_y_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
scale_x_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
labs(title = "Relación entre Copias Vendidas y Recaudación",
x = "Copias Vendidas",
y = "Recaudación (en logaritmos)") +
theme_minimal()
correlacion <- cor(lab$copiesSold, lab$revenue, use = "complete.obs")
correlacion_df <- data.frame(Variable1 = "copiesSold",
Variable2 = "revenue",
Correlacion = round(correlacion, 2))
correlacion_df %>%
kable(caption = "Correlación entre las copias vendidas y la recaudación") %>%
kable_styling(full_width = F)
umbral_copiesSold <- 10e6
umbral_revenue <- 200e6
lab_filt <- lab %>%
filter(copiesSold <= umbral_copiesSold & revenue <= umbral_revenue)
modelo <- lm(revenue ~ copiesSold, data = lab_filt)
summary(modelo)
ggplot(lab_filt, aes(x = copiesSold, y = revenue)) +
geom_point(size = 2, alpha = 0.7) +
geom_smooth(method = "lm", color = "blue") +
scale_x_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
scale_y_continuous(labels = function(x) {
ifelse(x >= 1e6,
paste0(format(x / 1e6, big.mark = ",", digits = 2), " M"),
ifelse(x >= 1e3,
paste0(format(x / 1e3, big.mark = ",", digits = 2), " K"),
format(x)))
}) +
labs(title = "Regresión Lineal: Copias Vendidas vs Recaudación",
x = "Copias Vendidas",
y = "Recaudación (en miles de dólares)") +
theme_minimal()
